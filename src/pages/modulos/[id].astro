---
import type { GetStaticPaths } from 'astro';

import Layout from '../../layouts/Layout.astro';
import { Data } from '../../data/Modules.data';
import { type Piscina } from '../../interfaces/Module.interface';

const { id } = Astro.params;

let modulo;
if (id) {
	modulo = Data.find((modulo) => modulo.modulo.toString() == id);
}

export const getStaticPaths = (() => {
	return Data.map((modulo) => {
		return {
			params: { id: modulo.modulo },
		};
	});
}) satisfies GetStaticPaths;
---

<Layout title=`Module ${modulo?.modulo}`>
	<main class='container mx-auto'>
		<div class='flex mb-10 justify-between'>
			<h1 class='text-white text-left text-4xl'>Módulo {modulo?.modulo}</h1>

			<div>
				<button
					type='button'
					class='focus:outline-none text-white bg-green-700 hover:bg-green-800 focus:ring-4 focus:ring-green-300 font-medium rounded-lg text-sm px-8 py-3 me-2 mb-2 dark:bg-green-600 dark:hover:bg-green-700 dark:focus:ring-green-800'
					>Activar</button
				>
				<button
					type='button'
					class='focus:outline-none text-white bg-red-700 hover:bg-red-800 focus:ring-4 focus:ring-red-300 font-medium rounded-lg text-sm px-8 py-3 me-2 mb-2 dark:bg-red-600 dark:hover:bg-red-700 dark:focus:ring-red-900'
					>Desactivar</button
				>
			</div>
		</div>
		<div class='relative overflow-x-auto shadow-md sm:rounded-lg'>
			<table
				class='w-full text-sm text-left rtl:text-right text-gray-500 dark:text-gray-400'
			>
				<thead
					class='text-xs text-gray-700 uppercase bg-gray-50 dark:bg-gray-700 dark:text-gray-400 text-center'
				>
					<tr>
						<th scope='col' class='px-6 py-3'> PLC </th>
						<th scope='col' class='px-6 py-3'> Pisc. </th>
						<th scope='col' class='px-6 py-3'> Alim. </th>
						<th scope='col' class='px-6 py-3'> % </th>
						<th scope='col' class='px-6 py-3'> Calib. </th>
						<th scope='col' class='px-6 py-3'> T.R </th>
						<th scope='col' class='px-6 py-3'> T.E </th>
						<th scope='col' class='px-6 py-3'> Estado </th>
						<th scope='col' class='px-6 py-3'> Gestión </th>
					</tr>
				</thead>
				<tbody>
					{
						modulo?.piscinas.map((piscina: Piscina) => (
							<tr class='odd:bg-white odd:dark:bg-gray-900 even:bg-gray-50 even:dark:bg-gray-800 border-b dark:border-gray-700 text-center'>
								<th
									scope='row'
									class='px-6 py-4 font-medium text-gray-900 whitespace-nowrap dark:text-green-500'
								>
									Contectado
								</th>
								<td class='px-6 py-4'>{piscina.piscina.toUpperCase()} </td>
								<td class='px-6 py-4'>{piscina.kilosProgramados} </td>
								<td class='px-6 py-4'>{piscina.porcentaje} </td>
								<td class='px-6 py-4'>{piscina.calibración}</td>
								<td class='px-6 py-4'>{piscina.tr}</td>
								<td class='px-6 py-4'>{piscina.te}</td>
								<td class='px-6 py-4'>
									<div class='text-white bg-green-700 rounded-md p-2'>
										Activa
									</div>
								</td>
								<th class='px-4 py-4'>
									<div>
										<button class='p-2 bg-green-600 rounded-md text-white hover:bg-green-700'>
											On
										</button>
										<button class='p-2 bg-red-600 rounded-md text-white hover:bg-red-700'>
											Off
										</button>
										<button class='p-2 bg-blue-600 rounded-md text-white hover:bg-blue-700'>
											Test
										</button>
									</div>
								</th>
							</tr>
						))
					}
				</tbody>
			</table>
		</div>
	</main>
</Layout>
